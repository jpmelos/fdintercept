name: CI

on:
  push:

env:
  PRECOMMIT_VERSION: 4.2.0
  CARGO_MACHETE_VERSION: 0.8.0
  CARGO_AUDIT_VERSION: 0.21.2
  CARGO_FEATURES_VERSION: 0.10.0
  TAPLO_VERSION: 0.9.3

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Cache Rust toolchain
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup/toolchains
            ~/.rustup/tmp
            ~/.rustup/settings.toml
          key: ${{ runner.os }}-rustup-${{ hashFiles('rust-toolchain.toml') }}
          restore-keys: ${{ runner.os }}-rustup

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-pip-pre-commit-${{ env.PRECOMMIT_VERSION }}
          restore-keys: ${{ runner.os }}-pip

      - name: Cache pre-commit downloads
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: ${{ runner.os }}-pre-commit

      - name: Cache Cargo registry and build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo

      - name: Cache Cargo binaries
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/cargo-machete
            ~/.cargo/bin/cargo-audit
            ~/.cargo/bin/cargo-features
            ~/.cargo/bin/taplo
          key: ${{ runner.os }}-cargo-bins-machete${{ env.CARGO_MACHETE_VERSION }}-audit${{ env.CARGO_AUDIT_VERSION }}-features${{ env.CARGO_FEATURES_VERSION }}-taplo${{ env.TAPLO_VERSION }}
          restore-keys: ${{ runner.os }}-cargo-bins

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache: false

      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit==${{ env.PRECOMMIT_VERSION }}

      - name: Install pre-commit dependencies
        run: |
          if ! which cargo-machete >/dev/null || ! cargo machete --version | grep -q "${{ env.CARGO_MACHETE_VERSION }}"; then
            cargo install cargo-machete@${{ env.CARGO_MACHETE_VERSION }}
          fi
          if ! which cargo-audit >/dev/null || ! cargo audit --version | grep -q "${{ env.CARGO_AUDIT_VERSION }}"; then
            cargo install cargo-audit@${{ env.CARGO_AUDIT_VERSION }}
          fi
          if ! which cargo-features >/dev/null || ! cargo features --version | grep -q "${{ env.CARGO_FEATURES_VERSION }}"; then
            cargo install cargo-features-manager@${{ env.CARGO_FEATURES_VERSION }}
          fi
          if ! which taplo >/dev/null || ! taplo --version | grep -q "${{ env.TAPLO_VERSION }}"; then
            cargo install taplo-cli@${{ env.TAPLO_VERSION }}
          fi

      - name: Run pre-commit checks
        run: pre-commit run --all-files

      - name: Compile tests
        run: cargo test --no-run --locked

      - name: Run tests
        timeout-minutes: 1
        run: cargo test
